import type { JSX } from '@inovex.de/elements';
export declare const InoAutocomplete: import("vue").DefineComponent<JSX.InoAutocomplete & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    debounceTimeout?: unknown;
    noOptionsText?: unknown;
    onOptionSelected?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    debounceTimeout?: number;
    noOptionsText?: string;
    onOptionSelected?: (event: CustomEvent<string>) => void;
}>, {}>;
export declare const InoButton: import("vue").DefineComponent<JSX.InoButton & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    autoFocus?: unknown;
    colorScheme?: unknown;
    dense?: unknown;
    disabled?: unknown;
    edgeMirrored?: unknown;
    fill?: unknown;
    form?: unknown;
    loading?: unknown;
    name?: unknown;
    type?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    fill?: import("@inovex.de/elements").SurfaceType;
    type?: import("@inovex.de/elements").ButtonType;
    name?: string;
    colorScheme?: import("@inovex.de/elements").ButtonColorScheme;
    loading?: boolean;
    form?: string;
    disabled?: boolean;
    constructor?: Function;
    dense?: boolean;
    autoFocus?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    edgeMirrored?: boolean;
}>, {}>;
export declare const InoCard: import("vue").DefineComponent<JSX.InoCard & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    disableElevation?: unknown;
    selected?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    selected?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    disableElevation?: boolean;
}>, {}>;
export declare const InoCarousel: import("vue").DefineComponent<JSX.InoCarousel & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    animated?: unknown;
    autoplay?: unknown;
    hideButtons?: unknown;
    infinite?: unknown;
    intermission?: unknown;
    reverse?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {
    value: any;
} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    reverse?: boolean;
    constructor?: Function;
    infinite?: boolean;
    autoplay?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    animated?: boolean;
    hideButtons?: boolean;
    intermission?: number;
}>, {
    value: any;
}>;
export declare const InoCarouselSlide: import("vue").DefineComponent<JSX.InoCarouselSlide & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    src?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {
    value: any;
} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    src?: string;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {
    value: any;
}>;
export declare const InoCheckbox: import("vue").DefineComponent<JSX.InoCheckbox & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    checked?: unknown;
    disabled?: unknown;
    indeterminate?: unknown;
    name?: unknown;
    onCheckedChange?: unknown;
    selection?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    name?: string;
    value?: string;
    disabled?: boolean;
    constructor?: Function;
    checked?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    selection?: boolean;
    indeterminate?: boolean;
    onCheckedChange?: (event: CustomEvent<any>) => void;
}>, {}>;
export declare const InoChip: import("vue").DefineComponent<JSX.InoChip & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    colorScheme?: unknown;
    fill?: unknown;
    icon?: unknown;
    label?: unknown;
    onRemoveChip?: unknown;
    removable?: unknown;
    selectable?: unknown;
    selected?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    fill?: import("@inovex.de/elements").ChipSurface;
    colorScheme?: "default" | import("@inovex.de/elements").ColorScheme;
    value?: string;
    label?: string;
    constructor?: Function;
    icon?: string;
    selected?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    removable?: boolean;
    selectable?: boolean;
    onRemoveChip?: (event: CustomEvent<any>) => void;
}>, {}>;
export declare const InoChipSet: import("vue").DefineComponent<JSX.InoChipSet & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    onUpdateChipSet?: unknown;
    type?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    type?: import("@inovex.de/elements").ChipSetType;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    onUpdateChipSet?: (event: CustomEvent<any>) => void;
}>, {}>;
export declare const InoControlItem: import("vue").DefineComponent<JSX.InoControlItem & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    activated?: unknown;
    checked?: unknown;
    disabled?: unknown;
    indeterminate?: unknown;
    name?: unknown;
    onCheckedChange?: unknown;
    role?: unknown;
    secondaryText?: unknown;
    selected?: unknown;
    text?: unknown;
    trailing?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    name?: string;
    value?: string;
    text?: string;
    disabled?: boolean;
    activated?: boolean;
    trailing?: boolean;
    constructor?: Function;
    role?: "checkbox" | "radio";
    checked?: boolean;
    selected?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    indeterminate?: boolean;
    onCheckedChange?: (event: CustomEvent<any>) => void;
    secondaryText?: string;
}>, {}>;
export declare const InoDatepicker: import("vue").DefineComponent<JSX.InoDatepicker & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    autoFocus?: unknown;
    dateFormat?: unknown;
    defaultDate?: unknown;
    defaultHour?: unknown;
    defaultMinute?: unknown;
    disabled?: unknown;
    helper?: unknown;
    helperPersistent?: unknown;
    helperValidation?: unknown;
    hourStep?: unknown;
    label?: unknown;
    max?: unknown;
    min?: unknown;
    minuteStep?: unknown;
    name?: unknown;
    onValueChange?: unknown;
    outline?: unknown;
    range?: unknown;
    required?: unknown;
    showLabelHint?: unknown;
    twelveHourTime?: unknown;
    type?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    max?: string;
    required?: boolean;
    type?: import("@inovex.de/elements/dist/types/components/ino-datepicker/picker-factory").PickerTypeKeys;
    name?: string;
    outline?: boolean;
    value?: string;
    label?: string;
    disabled?: boolean;
    constructor?: Function;
    range?: boolean;
    helper?: string;
    min?: string;
    autoFocus?: boolean;
    dateFormat?: string;
    defaultDate?: string | string[];
    defaultHour?: number;
    defaultMinute?: number;
    onValueChange?: (event: CustomEvent<string>) => void;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    showLabelHint?: boolean;
    helperPersistent?: boolean;
    helperValidation?: boolean;
    twelveHourTime?: boolean;
    minuteStep?: number;
    hourStep?: number;
}>, {}>;
export declare const InoFab: import("vue").DefineComponent<JSX.InoFab & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    disabled?: unknown;
    edgePosition?: unknown;
    extended?: unknown;
    icon?: unknown;
    label?: unknown;
    mini?: unknown;
    tooltipPlacement?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    label?: string;
    disabled?: boolean;
    constructor?: Function;
    icon?: string;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    extended?: boolean;
    edgePosition?: "none" | "top-right" | "top-left" | "bottom-right" | "bottom-left";
    mini?: boolean;
    tooltipPlacement?: "none" | import("@popperjs/core").Placement;
}>, {}>;
export declare const InoFabSet: import("vue").DefineComponent<JSX.InoFabSet & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    dialDirection?: unknown;
    leftRightLocation?: unknown;
    openDial?: unknown;
    topBottomLocation?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    dialDirection?: import("@inovex.de/elements").Locations;
    topBottomLocation?: import("@inovex.de/elements").VerticalLocation;
    leftRightLocation?: import("@inovex.de/elements").HorizontalLocation;
    openDial?: boolean;
}>, {}>;
export declare const InoFormRow: import("vue").DefineComponent<JSX.InoFormRow & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    label?: unknown;
    mandatory?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    label?: string;
    constructor?: Function;
    mandatory?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {}>;
export declare const InoHeader: import("vue").DefineComponent<JSX.InoHeader & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    text?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    text?: string;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {}>;
export declare const InoIconButton: import("vue").DefineComponent<JSX.InoIconButton & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    activated?: unknown;
    autoFocus?: unknown;
    colorScheme?: unknown;
    disabled?: unknown;
    filled?: unknown;
    icon?: unknown;
    onClickEl?: unknown;
    type?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    type?: import("@inovex.de/elements").ButtonType;
    colorScheme?: import("@inovex.de/elements").ColorScheme;
    disabled?: boolean;
    activated?: boolean;
    constructor?: Function;
    filled?: boolean;
    icon?: string;
    autoFocus?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    onClickEl?: (event: CustomEvent<any>) => void;
}>, {}>;
export declare const InoImg: import("vue").DefineComponent<JSX.InoImg & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    alt?: unknown;
    decoding?: unknown;
    fallbackIcon?: unknown;
    height?: unknown;
    imgListItem?: unknown;
    label?: unknown;
    ratioHeight?: unknown;
    ratioWidth?: unknown;
    rounded?: unknown;
    sizes?: unknown;
    src?: unknown;
    srcset?: unknown;
    usemap?: unknown;
    width?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    height?: number;
    width?: number;
    label?: string;
    constructor?: Function;
    alt?: string;
    src?: string;
    decoding?: import("@inovex.de/elements").ImageDecodingTypes;
    sizes?: string;
    srcset?: string;
    usemap?: string;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    fallbackIcon?: string;
    imgListItem?: boolean;
    ratioWidth?: number;
    ratioHeight?: number;
    rounded?: boolean;
}>, {}>;
export declare const InoImgList: import("vue").DefineComponent<JSX.InoImgList & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    encloseLabel?: unknown;
    masonry?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    masonry?: boolean;
    encloseLabel?: boolean;
}>, {}>;
export declare const InoInput: import("vue").DefineComponent<JSX.InoInput & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    autoFocus?: unknown;
    autocomplete?: unknown;
    dataList?: unknown;
    decimalPlaces?: unknown;
    disabled?: unknown;
    error?: unknown;
    helper?: unknown;
    helperCharacterCounter?: unknown;
    helperPersistent?: unknown;
    helperValidation?: unknown;
    label?: unknown;
    max?: unknown;
    maxlength?: unknown;
    min?: unknown;
    name?: unknown;
    onInoBlur?: unknown;
    onInoFocus?: unknown;
    onValueChange?: unknown;
    outline?: unknown;
    pattern?: unknown;
    placeholder?: unknown;
    required?: unknown;
    showLabelHint?: unknown;
    size?: unknown;
    step?: unknown;
    thousandsSeparator?: unknown;
    type?: unknown;
    unit?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    max?: string;
    required?: boolean;
    type?: string;
    error?: boolean;
    name?: string;
    outline?: boolean;
    value?: string;
    label?: string;
    pattern?: string;
    autocomplete?: string;
    disabled?: boolean;
    size?: number;
    constructor?: Function;
    helper?: string;
    step?: number | "any";
    placeholder?: string;
    maxlength?: number;
    min?: string;
    autoFocus?: boolean;
    onValueChange?: (event: CustomEvent<string>) => void;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    showLabelHint?: boolean;
    helperPersistent?: boolean;
    helperValidation?: boolean;
    thousandsSeparator?: boolean;
    decimalPlaces?: number;
    unit?: string;
    helperCharacterCounter?: boolean;
    dataList?: string;
    onInoBlur?: (event: CustomEvent<void>) => void;
    onInoFocus?: (event: CustomEvent<void>) => void;
}>, {}>;
export declare const InoInputFile: import("vue").DefineComponent<JSX.InoInputFile & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    accept?: unknown;
    autoFocus?: unknown;
    disabled?: unknown;
    dragAndDrop?: unknown;
    dragAndDropSecondaryText?: unknown;
    dragAndDropText?: unknown;
    label?: unknown;
    multiple?: unknown;
    name?: unknown;
    onChangeFile?: unknown;
    required?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    required?: boolean;
    name?: string;
    label?: string;
    disabled?: boolean;
    multiple?: boolean;
    constructor?: Function;
    accept?: string;
    autoFocus?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    dragAndDrop?: boolean;
    dragAndDropText?: string;
    dragAndDropSecondaryText?: string;
    onChangeFile?: (event: CustomEvent<{
        e: any;
        files: File[];
    }>) => void;
}>, {}>;
export declare const InoLabel: import("vue").DefineComponent<JSX.InoLabel & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    disabled?: unknown;
    outline?: unknown;
    required?: unknown;
    showHint?: unknown;
    text?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    required?: boolean;
    outline?: boolean;
    text?: string;
    disabled?: boolean;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    showHint?: boolean;
}>, {}>;
export declare const InoList: import("vue").DefineComponent<JSX.InoList & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    avatar?: unknown;
    dense?: unknown;
    twoLines?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    dense?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    twoLines?: boolean;
    avatar?: boolean;
}>, {}>;
export declare const InoListDivider: import("vue").DefineComponent<JSX.InoListDivider & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    betweenLists?: unknown;
    inset?: unknown;
    padded?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    inset?: boolean;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    betweenLists?: boolean;
    padded?: boolean;
}>, {}>;
export declare const InoListItem: import("vue").DefineComponent<JSX.InoListItem & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    activated?: unknown;
    disabled?: unknown;
    onClickEl?: unknown;
    secondaryText?: unknown;
    selected?: unknown;
    text?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    text?: string;
    disabled?: boolean;
    activated?: boolean;
    constructor?: Function;
    selected?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    secondaryText?: string;
    onClickEl?: (event: CustomEvent<any>) => void;
}>, {}>;
export declare const InoMenu: import("vue").DefineComponent<JSX.InoMenu & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    placement?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    placement?: import("@popperjs/core").Placement;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {}>;
export declare const InoNavItem: import("vue").DefineComponent<JSX.InoNavItem & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    activated?: unknown;
    disabled?: unknown;
    subText?: unknown;
    text?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    text?: string;
    disabled?: boolean;
    activated?: boolean;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    subText?: string;
}>, {}>;
export declare const InoOption: import("vue").DefineComponent<JSX.InoOption & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    disabled?: unknown;
    onClickEl?: unknown;
    selected?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    value?: string;
    disabled?: boolean;
    constructor?: Function;
    selected?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    onClickEl?: (event: CustomEvent<HTMLInoOptionElement>) => void;
}>, {}>;
export declare const InoOptionGroup: import("vue").DefineComponent<JSX.InoOptionGroup & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    label?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    label?: string;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {}>;
export declare const InoProgressBar: import("vue").DefineComponent<JSX.InoProgressBar & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    buffer?: unknown;
    indeterminate?: unknown;
    label?: unknown;
    progress?: unknown;
    reversed?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    buffer?: number;
    progress?: number;
    label?: string;
    constructor?: Function;
    reversed?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    indeterminate?: boolean;
}>, {}>;
export declare const InoRadio: import("vue").DefineComponent<JSX.InoRadio & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    checked?: unknown;
    disabled?: unknown;
    name?: unknown;
    onCheckedChange?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    name?: string;
    value?: string;
    disabled?: boolean;
    constructor?: Function;
    checked?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    onCheckedChange?: (event: CustomEvent<any>) => void;
}>, {}>;
export declare const InoRadioGroup: import("vue").DefineComponent<JSX.InoRadioGroup & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {
    value: any;
} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {
    value: any;
}>;
export declare const InoRange: import("vue").DefineComponent<JSX.InoRange & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    colorScheme?: unknown;
    disabled?: unknown;
    discrete?: unknown;
    markers?: unknown;
    max?: unknown;
    min?: unknown;
    name?: unknown;
    onValueChange?: unknown;
    step?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    max?: number;
    discrete?: boolean;
    name?: string;
    colorScheme?: import("@inovex.de/elements").ColorScheme;
    value?: number;
    disabled?: boolean;
    constructor?: Function;
    markers?: boolean;
    step?: number;
    min?: number;
    onValueChange?: (event: CustomEvent<any>) => void;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {}>;
export declare const InoSegmentButton: import("vue").DefineComponent<JSX.InoSegmentButton & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    checked?: unknown;
    dense?: unknown;
    disabled?: unknown;
    name?: unknown;
    onCheckedChange?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    name?: string;
    value?: string;
    disabled?: boolean;
    constructor?: Function;
    dense?: boolean;
    checked?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    onCheckedChange?: (event: CustomEvent<any>) => void;
}>, {}>;
export declare const InoSegmentGroup: import("vue").DefineComponent<JSX.InoSegmentGroup & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    name?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {
    value: any;
} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    name?: string;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {
    value: any;
}>;
export declare const InoSelect: import("vue").DefineComponent<JSX.InoSelect & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    disabled?: unknown;
    label?: unknown;
    name?: unknown;
    onValueChange?: unknown;
    outline?: unknown;
    required?: unknown;
    showLabelHint?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    required?: boolean;
    name?: string;
    outline?: boolean;
    value?: string;
    label?: string;
    disabled?: boolean;
    constructor?: Function;
    onValueChange?: (event: CustomEvent<string>) => void;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    showLabelHint?: boolean;
}>, {}>;
export declare const InoSidebar: import("vue").DefineComponent<JSX.InoSidebar & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    alignRight?: unknown;
    name?: unknown;
    onOpenChange?: unknown;
    open?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    open?: boolean;
    name?: string;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    alignRight?: boolean;
    onOpenChange?: (event: CustomEvent<any>) => void;
}>, {}>;
export declare const InoSpinner: import("vue").DefineComponent<JSX.InoSpinner & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    colorScheme?: unknown;
    height?: unknown;
    modal?: unknown;
    type?: unknown;
    width?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    type?: import("@inovex.de/elements").SpinnerType;
    height?: number;
    width?: number;
    colorScheme?: import("@inovex.de/elements").ColorScheme;
    constructor?: Function;
    modal?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {}>;
export declare const InoSwitch: import("vue").DefineComponent<JSX.InoSwitch & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    checked?: unknown;
    colorScheme?: unknown;
    disabled?: unknown;
    name?: unknown;
    onCheckedChange?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    name?: string;
    colorScheme?: import("@inovex.de/elements").ColorScheme;
    disabled?: boolean;
    constructor?: Function;
    checked?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    onCheckedChange?: (event: CustomEvent<any>) => void;
}>, {}>;
export declare const InoTable: import("vue").DefineComponent<JSX.InoTable & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {}>;
export declare const InoTableCell: import("vue").DefineComponent<JSX.InoTableCell & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    numeric?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    numeric?: boolean;
    constructor?: Function;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
}>, {}>;
export declare const InoTableRow: import("vue").DefineComponent<JSX.InoTableRow & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    headerRow?: unknown;
    selected?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    constructor?: Function;
    selected?: boolean;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    headerRow?: boolean;
}>, {}>;
export declare const InoTextarea: import("vue").DefineComponent<JSX.InoTextarea & import("./vue-component-lib/utils").InputProps, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    autoFocus?: unknown;
    autogrow?: unknown;
    cols?: unknown;
    disabled?: unknown;
    label?: unknown;
    maxlength?: unknown;
    minlength?: unknown;
    name?: unknown;
    onInoBlur?: unknown;
    onValueChange?: unknown;
    outline?: unknown;
    placeholder?: unknown;
    required?: unknown;
    rows?: unknown;
    showCharacterCounter?: unknown;
    showLabelHint?: unknown;
    value?: unknown;
    modelValue?: unknown;
    constructor?: unknown;
    toString?: unknown;
    toLocaleString?: unknown;
    valueOf?: unknown;
    hasOwnProperty?: unknown;
    isPrototypeOf?: unknown;
    propertyIsEnumerable?: unknown;
} & {} & {
    toString?: string;
    valueOf?: unknown;
    toLocaleString?: string;
    required?: boolean;
    name?: string;
    outline?: boolean;
    value?: string;
    label?: string;
    disabled?: boolean;
    constructor?: Function;
    placeholder?: string;
    maxlength?: number;
    minlength?: number;
    cols?: number;
    autoFocus?: boolean;
    rows?: number;
    onValueChange?: (event: CustomEvent<string>) => void;
    modelValue?: string | boolean;
    hasOwnProperty?: (v: PropertyKey) => boolean;
    isPrototypeOf?: (v: Object) => boolean;
    propertyIsEnumerable?: (v: PropertyKey) => boolean;
    showLabelHint?: boolean;
    onInoBlur?: (event: CustomEvent<void>) => void;
    showCharacterCounter?: boolean;
    autogrow?: boolean;
}>, {}>;
